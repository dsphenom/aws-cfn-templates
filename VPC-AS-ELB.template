{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation Template ElasticLoadBalancer-Deploy.template: Create a load balanced, Auto Scaled website in an existing Virtual Private Cloud (VPC). This creates an Auto Scaling group behind a load balancer with a simple health check. Also creates Scale Up and Scale Down policies based on CPU utilisation and sends a SNS notification.", 

  "Parameters" : {

    "VpcId" : {
      "Type" : "String",
      "Description" : "VPC id of your existing Virtual Private Cloud (VPC)"
    },

    "ELBSubnets" : {
      "Type" : "CommaDelimitedList",
      "Description" : "Comma separated list of subnet ids to deploy the ELB in your Virtual Private Cloud (VPC)"
    },

    "WebSubnets" : {
      "Type" : "CommaDelimitedList",
      "Description" : "Comma separated list of subnet ids to deploy the Web instances in your Virtual Private Cloud (VPC)"
    },

    "AZs" : {
      "Type" : "CommaDelimitedList",
      "Description" : "Comma separated list of Availability Zones for your Virtual Private Cloud (VPC)"
    },

    "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "t1.micro",
      "AllowedValues" : [ "t1.micro","m1.small","m1.medium","m1.large","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","c1.medium","c1.xlarge","cc1.4xlarge","cc2.8xlarge","cg1.4xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "InstanceCount" : {
      "Description" : "Number of EC2 instances to launch",
      "Type" : "Number",
      "Default" : "2"
    },

    "OperatorEmail": {
      "Description": "Email address to notify if there are any scaling operations",
      "Type": "String"
    },

    "InstanceName" : {
      "Description" : "Name of the new instances",
      "Type" : "String"
    },

    "AmiId" : {
      "Description" : "AMI Id to deploy instance from",
      "Type" : "String"
    },

    "KeyName" : {
      "Description" : "Name of and existing EC2 KeyPair to enable remote access to the instance",
      "Type" : "String"
    }

  },

  "Resources" : {

    "ELBSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "VpcId" },
        "GroupDescription" : "Enable HTTP and HTTPS access to port 80 and 443 respectively",
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0" },
          { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "0.0.0.0/0" }
         ]
      } 
    },

    "WebSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "VpcId" },
        "GroupDescription" : "Enable HTTP and HTTPS access to port 80 and 443 respectively",
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "SourceSecurityGroupId" : { "Ref" : "ELBSecurityGroup" } },
          { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "SourceSecurityGroupId" : { "Ref" : "ELBSecurityGroup" } }
         ]
      } 
    },

    "RemoteAdminSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : { 
        "VpcId" : { "Ref" : "VpcId" },
        "GroupDescription" : "Remote admin access",
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0" },
          { "IpProtocol" : "udp", "FromPort" : "60000", "ToPort" : "61000", "CidrIp" : "0.0.0.0/0" },
          { "IpProtocol" : "tcp", "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : "0.0.0.0/0" }
         ]
      }
    },

    "ElasticLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "SecurityGroups" : [ { "Ref" : "ELBSecurityGroup" } ],
        "Subnets" : { "Ref" : "ELBSubnets" },
        "Listeners" : [ {
          "LoadBalancerPort" : "80",
          "InstancePort" : "80",
          "Protocol" : "HTTP"
        } ],
        "HealthCheck" : {
          "Target" : { "Fn::Join" : [ "", [ "HTTP:", "80", "/index.php" ] ] },
          "HealthyThreshold" : "3",
          "UnhealthyThreshold" : "5",
          "Interval" : "30",
          "Timeout" : "25"
        }
      }
    },

    "NotificationTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "Subscription": [ {
            "Endpoint": { "Ref": "OperatorEmail" },
            "Protocol": "email" } ]
      }
    },

    "WebLaunchConfig" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Properties" : {
        "ImageId" : { "Ref" : "AmiId" },
        "SecurityGroups" : [ { "Ref" : "WebSecurityGroup" }, { "Ref" : "RemoteAdminSecurityGroup" } ],
        "InstanceType" : { "Ref" : "InstanceType" },
        "KeyName" : { "Ref" : "KeyName" },
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
                  "#!/bin/bash\n",
                  "\n",
        	  "yum -y update\n",
        	  "yum -y install httpd php\n",
        	  "yum -y install mosh --enablerepo=epel\n",
        	  "wget http://download.gluster.org/pub/gluster/glusterfs/LATEST/RHEL/glusterfs-epel.repo -O /etc/yum.repos.d/glusterfs-epel.repo\n",
        	  "sed -i -e 's/\\$releasever/6/g' /etc/yum.repos.d/glusterfs-epel.repo\n",
        	  "yum -y install glusterfs glusterfs-fuse\n",
         	  "chkconfig httpd on\n",
        	  "service httpd start\n",
                  "wget -q -O /var/www/html/index.php http://syd.deansamuels.info/scripts/php/hostinfo.php\n"
        	] ] } }
      }        
    },         

    "WebServerGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : { "Ref" : "AZs" },
        "VPCZoneIdentifier" : { "Ref" : "WebSubnets" },
        "LaunchConfigurationName" : { "Ref" : "WebLaunchConfig" },
        "MinSize" : { "Ref" : "InstanceCount" },
        "MaxSize" : "10",
        "LoadBalancerNames" : [ { "Ref" : "ElasticLoadBalancer" } ],
        "NotificationConfiguration" : {
          "TopicARN" : { "Ref" : "NotificationTopic" },
          "NotificationTypes" : [ "autoscaling:EC2_INSTANCE_LAUNCH","autoscaling:EC2_INSTANCE_LAUNCH_ERROR","autoscaling:EC2_INSTANCE_TERMINATE", "autoscaling:EC2_INSTANCE_TERMINATE_ERROR"]
        },
        "Tags" : [ { "Key" : "Name", "Value" : { "Ref" : "InstanceName" }, "PropagateAtLaunch" : "true" } ]
      }
    },

    "WebServerScaleUpPolicy" : {
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "Properties" : {
        "AdjustmentType" : "ChangeInCapacity",
        "AutoScalingGroupName" : { "Ref" : "WebServerGroup" },
        "Cooldown" : "60",
        "ScalingAdjustment" : "2"
      }
    },

    "WebServerScaleDownPolicy" : {
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "Properties" : {
        "AdjustmentType" : "ChangeInCapacity",
        "AutoScalingGroupName" : { "Ref" : "WebServerGroup" },
        "Cooldown" : "60",
        "ScalingAdjustment" : "-2"
      }
    },

    "CPUAlarmHigh": {
     "Type": "AWS::CloudWatch::Alarm",
     "Properties": {
        "AlarmDescription": "Scale-up if CPU > 70% for 2 minute",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Statistic": "Average",
        "Period": "60",
        "EvaluationPeriods": "2",
        "Threshold": "60",
        "AlarmActions": [ { "Ref": "WebServerScaleUpPolicy" } ],
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": { "Ref": "WebServerGroup" }
          }
        ],
        "ComparisonOperator": "GreaterThanThreshold"
      }
    },

    "CPUAlarmLow": {
     "Type": "AWS::CloudWatch::Alarm",
     "Properties": {
        "AlarmDescription": "Scale-down if CPU < 30% for 5 minutes",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Statistic": "Average",
        "Period": "60",
        "EvaluationPeriods": "5",
        "Threshold": "70",
        "AlarmActions": [ { "Ref": "WebServerScaleDownPolicy" } ],
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": { "Ref": "WebServerGroup" }
          }
        ],
        "ComparisonOperator": "LessThanThreshold"
      }
    }

  },

  "Outputs" : {
    "URL" : {
      "Description" : "URL of the website",
      "Value" :  { "Fn::Join" : [ "", [ "http://", { "Fn::GetAtt" : [ "ElasticLoadBalancer", "DNSName" ]}]]}
    }
  }
}
