{ "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation template to setup VPC environment across 2 AZs, 4 subnets per AZ.  One NAT instance per AZ and one Software VPN Gateway will be deployed for the VPC.",

    "Mappings": {
        "AWSInstanceType2Arch": {
            "c1.medium"       : { "Arch": "64" },
            "c1.xlarge"       : { "Arch": "64" },
            "m1.small"        : { "Arch": "64" },
            "m1.medium"       : { "Arch": "64" },
            "m1.large"        : { "Arch": "64" },
            "m1.xlarge"       : { "Arch": "64" }, 
            "m2.2xlarge"      : { "Arch": "64" }, 
            "m2.4xlarge"      : { "Arch": "64" }, 
            "m2.xlarge"       : { "Arch": "64" }, 
            "t1.micro"        : { "Arch": "64" }
        },

        "AWSRegionArch2AMINAT"   : {
            "eu-west-1"       : { "32": "ami-095b6c7d", "64": "ami-0b5b6c7f" },
            "sa-east-1"       : { "32": "ami-0439e619", "64": "ami-0039e61d" },
            "us-east-1"       : { "32": "ami-d8699bb1", "64": "ami-c6699baf" },
            "ap-northeast-1"  : { "32": "ami-12d86d13", "64": "ami-14d86d15" },
            "us-west-2"       : { "32": "ami-6eff725e", "64": "ami-52ff7262" },
            "us-west-1"       : { "32": "ami-c7cc9e82", "64": "ami-3bcc9e7e" },
            "ap-southeast-1"  : { "32": "ami-00eb9352", "64": "ami-02eb9350" },
            "ap-southeast-2"  : { "32": "ami-a1980f9b", "64": "ami-ab990e91" }
        },

        "AWSRegionArch2AMIVPN"   : {
            "eu-west-1"       : { "32": "ami-37cacd43", "64": "ami-4bcacd3f" },
            "sa-east-1"       : { "32": "ami-5267b94f", "64": "ami-5067b94d" },
            "us-east-1"       : { "32": "ami-9750fbfe", "64": "ami-9350fbfa" },
            "ap-northeast-1"  : { "32": "ami-36c67b37", "64": "ami-28c67b29" },
            "us-west-2"       : { "32": "ami-ce0f80fe", "64": "ami-cc0f80fc" },
            "us-west-1"       : { "32": "ami-df67439a", "64": "ami-dd674398" },
            "ap-southeast-1"  : { "32": "ami-e49adbb6", "64": "ami-e69adbb4" },
            "ap-southeast-2"  : { "32": "ami-b3990e89", "64": "ami-7f7dea45" }
        },

	"VPNCIDR"	: {
            "us-east-1"       : { "Cidr" : "10.10.0.0/16" },
            "us-west-1"       : { "Cidr" : "10.20.0.0/16" },
            "us-west-2"       : { "Cidr" : "10.30.0.0/16" },
            "ap-northeast-1"  : { "Cidr" : "10.40.0.0/16" },
            "ap-southeast-1"  : { "Cidr" : "10.50.0.0/16" },
            "eu-west-1"       : { "Cidr" : "10.60.0.0/16" },
            "sa-east-1"       : { "Cidr" : "10.70.0.0/16" },
            "ap-southeast-2"  : { "Cidr" : "10.80.0.0/16" },
            "remote-vpn"      : { "Cidr" : "10.100.0.0/24" }
	},

	"MyAZs"		: {
            "us-east-1"       : { "AZ1" : "us-east-1a", "AZ2" : "us-east-1b" },
            "us-west-1"       : { "AZ1" : "us-west-1b", "AZ2" : "us-west-1c" },
            "us-west-2"       : { "AZ1" : "us-west-2a", "AZ2" : "us-west-2b" },
            "ap-northeast-1"  : { "AZ1" : "ap-northeast-1a", "AZ2" : "ap-northeast-1b" },
            "ap-southeast-1"  : { "AZ1" : "ap-southeast-1a", "AZ2" : "ap-southeast-1b" },
            "eu-west-1"       : { "AZ1" : "eu-west-1a", "AZ2" : "eu-west-1b" },
            "sa-east-1"       : { "AZ1" : "sa-east-1a", "AZ2" : "sa-east-1b" },
            "ap-southeast-2"  : { "AZ1" : "ap-southeast-2a", "AZ2" : "ap-southeast-2b" }
	},

	"DMZNetAZs"	: {
            "us-east-1"       : { "DMZNetAZ1" : "10.10.0.0/26", "DMZNetAZ2" : "10.10.0.64/26" },
            "us-west-1"       : { "DMZNetAZ1" : "10.20.0.0/26", "DMZNetAZ2" : "10.20.0.64/26" },
            "us-west-2"       : { "DMZNetAZ1" : "10.30.0.0/26", "DMZNetAZ2" : "10.30.0.64/26" },
            "ap-northeast-1"  : { "DMZNetAZ1" : "10.40.0.0/26", "DMZNetAZ2" : "10.40.0.64/26" },
            "ap-southeast-1"  : { "DMZNetAZ1" : "10.50.0.0/26", "DMZNetAZ2" : "10.50.0.64/26" },
            "eu-west-1"       : { "DMZNetAZ1" : "10.60.0.0/26", "DMZNetAZ2" : "10.60.0.64/26" },
            "sa-east-1"       : { "DMZNetAZ1" : "10.70.0.0/26", "DMZNetAZ2" : "10.70.0.64/26" },
            "ap-southeast-2"  : { "DMZNetAZ1" : "10.80.0.0/26", "DMZNetAZ2" : "10.80.0.64/26" }
	},

        "WebNetAZs"     : {
            "us-east-1"       : { "WebNetAZ1" : "10.10.1.0/26", "WebNetAZ2" : "10.10.1.64/26" },
            "us-west-1"       : { "WebNetAZ1" : "10.20.1.0/26", "WebNetAZ2" : "10.20.1.64/26" },
            "us-west-2"       : { "WebNetAZ1" : "10.30.1.0/26", "WebNetAZ2" : "10.30.1.64/26" },
            "ap-northeast-1"  : { "WebNetAZ1" : "10.40.1.0/26", "WebNetAZ2" : "10.40.1.64/26" },
            "ap-southeast-1"  : { "WebNetAZ1" : "10.50.1.0/26", "WebNetAZ2" : "10.50.1.64/26" },
            "eu-west-1"       : { "WebNetAZ1" : "10.60.1.0/26", "WebNetAZ2" : "10.60.1.64/26" },
            "sa-east-1"       : { "WebNetAZ1" : "10.70.1.0/26", "WebNetAZ2" : "10.70.1.64/26" },
            "ap-southeast-2"  : { "WebNetAZ1" : "10.80.1.0/26", "WebNetAZ2" : "10.80.1.64/26" }
        },

        "AppNetAZs"     : {
            "us-east-1"       : { "AppNetAZ1" : "10.10.2.0/26", "AppNetAZ2" : "10.10.2.64/26" },
            "us-west-1"       : { "AppNetAZ1" : "10.20.2.0/26", "AppNetAZ2" : "10.20.2.64/26" },
            "us-west-2"       : { "AppNetAZ1" : "10.30.2.0/26", "AppNetAZ2" : "10.30.2.64/26" },
            "ap-northeast-1"  : { "AppNetAZ1" : "10.40.2.0/26", "AppNetAZ2" : "10.40.2.64/26" },
            "ap-southeast-1"  : { "AppNetAZ1" : "10.50.2.0/26", "AppNetAZ2" : "10.50.2.64/26" },
            "eu-west-1"       : { "AppNetAZ1" : "10.60.2.0/26", "AppNetAZ2" : "10.60.2.64/26" },
            "sa-east-1"       : { "AppNetAZ1" : "10.70.2.0/26", "AppNetAZ2" : "10.70.2.64/26" },
            "ap-southeast-2"  : { "AppNetAZ1" : "10.80.2.0/26", "AppNetAZ2" : "10.80.2.64/26" }
        },

        "RDBNetAZs"     : {
            "us-east-1"       : { "RDBNetAZ1" : "10.10.3.0/26", "RDBNetAZ2" : "10.10.3.64/26" },
            "us-west-1"       : { "RDBNetAZ1" : "10.20.3.0/26", "RDBNetAZ2" : "10.20.3.64/26" },
            "us-west-2"       : { "RDBNetAZ1" : "10.30.3.0/26", "RDBNetAZ2" : "10.30.3.64/26" },
            "ap-northeast-1"  : { "RDBNetAZ1" : "10.40.3.0/26", "RDBNetAZ2" : "10.40.3.64/26" },
            "ap-southeast-1"  : { "RDBNetAZ1" : "10.50.3.0/26", "RDBNetAZ2" : "10.50.3.64/26" },
            "eu-west-1"       : { "RDBNetAZ1" : "10.60.3.0/26", "RDBNetAZ2" : "10.60.3.64/26" },
            "sa-east-1"       : { "RDBNetAZ1" : "10.70.3.0/26", "RDBNetAZ2" : "10.70.3.64/26" },
            "ap-southeast-2"  : { "RDBNetAZ1" : "10.80.3.0/26", "RDBNetAZ2" : "10.80.3.64/26" }
        },

	"AZCodes"	: {
            "us-east-1"       : { "AZCode" : "iad" },
            "us-west-1"       : { "AZCode" : "sfo" },
            "us-west-2"       : { "AZCode" : "pdx" },
            "ap-northeast-1"  : { "AZCode" : "nrt" },
            "ap-southeast-1"  : { "AZCode" : "sin" },
            "eu-west-1"       : { "AZCode" : "dub" },
            "sa-east-1"       : { "AZCode" : "gru" },
            "ap-southeast-2"  : { "AZCode" : "syd" }
	}
    }, 

  "Parameters" : {

    "NATInstanceType" : {
      "Description" : "NAT EC2 instance type",
      "Type" : "String",
      "Default" : "c1.medium",
      "AllowedValues" : [ "t1.micro","m1.small","m1.medium","m1.large","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","c1.medium","c1.xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "VPNInstanceType" : {
      "Description" : "VPN Gateway EC2 instance type",
      "Type" : "String",
      "Default" : "c1.medium",
      "AllowedValues" : [ "t1.micro","m1.small","m1.medium","m1.large","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","c1.medium","c1.xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "VPNUserPassword": {
      "Description": "OpenVPN user password for SSL VPN access", 
      "NoEcho": "true",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "41"
    },

    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the NAT/VPN server", 
      "Type": "String"
    },

    "HostedZone" : {
      "Type" : "String",
      "Description" : "The DNS name of an existing Amazon Route 53 hosted zone to add VPN Gateway"
    }
   },

  "Resources" : {

    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : { "Fn::FindInMap" : [ "VPNCIDR", { "Ref" : "AWS::Region" }, "Cidr" ] },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Join" : ["", [ { "Fn::FindInMap" : [ "AZCodes" , { "Ref" : "AWS::Region" }, "AZCode" ] }," VPC" ] ] } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } }
        ]
      }
    },

    "DMZSubnetAZ1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::FindInMap" : [ "DMZNetAZs", { "Ref" : "AWS::Region" }, "DMZNetAZ1" ] },
	"AvailabilityZone" : { "Fn::FindInMap" : [ "MyAZs", { "Ref" : "AWS::Region" }, "AZ1" ] },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "DMZ-AZ1" }
        ]
      }
    },

    "DMZSubnetAZ2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::FindInMap" : [ "DMZNetAZs", { "Ref" : "AWS::Region" }, "DMZNetAZ2" ] },
        "AvailabilityZone" : { "Fn::FindInMap" : [ "MyAZs", { "Ref" : "AWS::Region" }, "AZ2" ] },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "DMZ-AZ2" }
        ]
      }
    },

    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" }
        ]
      }
    },

    "AttachGateway" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },

    "RouteViaIGW" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" }
        ]
      }
    },

    "PublicRoute" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "RouteViaIGW" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },

    "DMZSubnetRouteTableAssociationAZ1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DMZSubnetAZ1" },
        "RouteTableId" : { "Ref" : "RouteViaIGW" }
      }
    },

    "DMZSubnetRouteTableAssociationAZ2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DMZSubnetAZ2" },
        "RouteTableId" : { "Ref" : "RouteViaIGW" }
      }
    },

    "PublicNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} },
          { "Key" : "Network", "Value" : "Public" }
        ]
      }
    },

    "InboundSSHPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : { "Fn::FindInMap" : [ "VPNCIDR", { "Ref" : "AWS::Region" }, "Cidr" ] },
        "PortRange" : { "From" : "22", "To" : "22" }
      }
    },

    "InboundHTTPPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PublicNetworkAcl"},
        "RuleNumber" : "101",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "80", "To" : "80"}
      }
    },

    "InboundHTTPSPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "102",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "443", "To" : "443" }
      }
    },

    "InboundSSLVPNPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "103",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "943", "To" : "943" }
      }
    },

    "InboundSSLVPNUDPPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "104",
        "Protocol" : "17",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "1194", "To" : "1194" }
      }
    },

    "InboundDynamicPortsPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "105",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "1024", "To" : "65535" }
      }
    },

    "OutboundHTTPPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "80", "To" : "80" }
      }
    },

    "OutboundHTTPSPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "101",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "443", "To" : "443" }
      }
    },

    "OutBoundDynamicPortPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "103",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "1024", "To" : "65535" }
      }
    },

    "PublicSubnetNetworkAclAssociationAZ1" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DMZSubnetAZ1" },
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
      }
    },

    "PublicSubnetNetworkAclAssociationAZ2" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DMZSubnetAZ2" },
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
      }
    },

    "WebSubnetAZ1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::FindInMap" : [ "WebNetAZs", { "Ref" : "AWS::Region" }, "WebNetAZ1" ] },
        "AvailabilityZone" : { "Fn::FindInMap" : [ "MyAZs", { "Ref" : "AWS::Region" }, "AZ1" ] },
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} },
          {"Key" : "Network", "Value" : "WebSubnet-AZ1" }
        ]
      }
    },

    "WebSubnetAZ2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::FindInMap" : [ "WebNetAZs", { "Ref" : "AWS::Region" }, "WebNetAZ2" ] },
        "AvailabilityZone" : { "Fn::FindInMap" : [ "MyAZs", { "Ref" : "AWS::Region" }, "AZ2" ] },
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} },
          {"Key" : "Network", "Value" : "WebSubnet-AZ2" }
        ]
      }
    },

    "AppSubnetAZ1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::FindInMap" : [ "AppNetAZs", { "Ref" : "AWS::Region" }, "AppNetAZ1" ] },
        "AvailabilityZone" : { "Fn::FindInMap" : [ "MyAZs", { "Ref" : "AWS::Region" }, "AZ1" ] },
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} },
          {"Key" : "Network", "Value" : "AppSubnet-AZ1" }
        ]
      }
    },

    "AppSubnetAZ2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::FindInMap" : [ "AppNetAZs", { "Ref" : "AWS::Region" }, "AppNetAZ2" ] },
        "AvailabilityZone" : { "Fn::FindInMap" : [ "MyAZs", { "Ref" : "AWS::Region" }, "AZ2" ] },
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} },
          {"Key" : "Network", "Value" : "AppSubnet-AZ2" }
        ]
      }
    },

    "RDBSubnetAZ1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::FindInMap" : [ "RDBNetAZs", { "Ref" : "AWS::Region" }, "RDBNetAZ1" ] },
        "AvailabilityZone" : { "Fn::FindInMap" : [ "MyAZs", { "Ref" : "AWS::Region" }, "AZ1" ] },
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} },
          {"Key" : "Network", "Value" : "RDBSubnet-AZ1" }
        ]
      }
    },

    "RDBSubnetAZ2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::FindInMap" : [ "RDBNetAZs", { "Ref" : "AWS::Region" }, "RDBNetAZ2" ] },
        "AvailabilityZone" : { "Fn::FindInMap" : [ "MyAZs", { "Ref" : "AWS::Region" }, "AZ2" ] },
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} },
          {"Key" : "Network", "Value" : "RDBSubnet-AZ2" }
        ]
      }
    },

    "RouteViaNATAZ1" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} },
          {"Key" : "Network", "Value" : "Private AZ1" }
        ]
      }
    },

    "NATRouteAZ1" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "RouteViaNATAZ1" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "InstanceId" : { "Ref" : "NATInstanceAZ1" }
      },
      "DependsOn" : "NATInstanceAZ1"
    },

    "RouteViaNATAZ2" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} },
          {"Key" : "Network", "Value" : "Private AZ2" }
        ]
      }
    },

    "NATRouteAZ2" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "RouteViaNATAZ2" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "InstanceId" : { "Ref" : "NATInstanceAZ2" }
      },
      "DependsOn" : "NATInstanceAZ2"
    },

    "WebSubnetRouteTableAssociationAZ1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "WebSubnetAZ1" },
        "RouteTableId" : { "Ref" : "RouteViaNATAZ1" }
      }
    },

    "WebSubnetRouteTableAssociationAZ2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "WebSubnetAZ2" },
        "RouteTableId" : { "Ref" : "RouteViaNATAZ2" }
      }
    },

    "AppSubnetRouteTableAssociationAZ1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "AppSubnetAZ1" },
        "RouteTableId" : { "Ref" : "RouteViaNATAZ1" }
      }
    },

    "AppSubnetRouteTableAssociationAZ2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "AppSubnetAZ2" },
        "RouteTableId" : { "Ref" : "RouteViaNATAZ2" }
      }
    },

    "RDBSubnetRouteTableAssociationAZ1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "RDBSubnetAZ1" },
        "RouteTableId" : { "Ref" : "RouteViaNATAZ1" }
      }
    },

    "RDBSubnetRouteTableAssociationAZ2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "RDBSubnetAZ2" },
        "RouteTableId" : { "Ref" : "RouteViaNATAZ2" }
      }
    },

    "RemoteAdminSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Remote Admin Access",
        "VpcId" : { "Ref" : "VPC" },
        "SecurityGroupIngress" : [ { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Fn::FindInMap" : [ "VPNCIDR", { "Ref" : "AWS::Region" }, "Cidr" ] } } ]
      }
    },

    "NATSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Private instances access via NAT",
        "VpcId" : { "Ref" : "VPC" },
        "SecurityGroupIngress" : [ { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : { "Fn::FindInMap" : [ "VPNCIDR", { "Ref" : "AWS::Region" }, "Cidr" ] } },
		{ "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : { "Fn::FindInMap" : [ "VPNCIDR", { "Ref" : "AWS::Region" }, "Cidr" ] } } 
        ],
        "SecurityGroupEgress" : [ { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0" },
		{ "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "0.0.0.0/0" }
	]
      }
    },

    "VPNSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "SSL VPN Port Access",
        "VpcId" : { "Ref" : "VPC" },
        "SecurityGroupIngress" : [ 
              { "IpProtocol" : "udp", "FromPort" : "1194", "ToPort" : "1194", "CidrIp" : "0.0.0.0/0" },
              { "IpProtocol" : "tcp", "FromPort" : "943", "ToPort" : "943", "CidrIp" : "0.0.0.0/0" },
              { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "0.0.0.0/0" }
         ]
      }
    },

    "NATInstanceAZ1" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
	"ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMINAT", { "Ref" : "AWS::Region" }, { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "NATInstanceType" }, "Arch" ] } ] },
	"InstanceType" : { "Ref" : "NATInstanceType" },
	"DisableApiTermination" : "false",
	"SourceDestCheck" : "false",
	"KeyName" : { "Ref" : "KeyName" },
	"SecurityGroupIds" : [ { "Ref" : "RemoteAdminSecurityGroup" }, { "Ref" : "NATSecurityGroup" } ],
	"SubnetId" : { "Ref" : "DMZSubnetAZ1" },
	"Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Join" : ["", [ { "Fn::FindInMap" : [ "MyAZs", { "Ref" : "AWS::Region" }, "AZ1" ] }, " NAT GWY" ] ] } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} }
	],
	"UserData" : { "Fn::Base64" : { "Fn::FindInMap" : [ "VPNCIDR", { "Ref" : "AWS::Region" }, "Cidr" ] } }
      }
    },

    "NATInstanceAZ2" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMINAT", { "Ref" : "AWS::Region" }, { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "NATInstanceType" }, "Arch" ] } ] },
        "InstanceType" : { "Ref" : "NATInstanceType" },
        "DisableApiTermination" : "false",
        "SourceDestCheck" : "false",
        "KeyName" : { "Ref" : "KeyName" },
        "SecurityGroupIds" : [ { "Ref" : "RemoteAdminSecurityGroup" }, { "Ref" : "NATSecurityGroup" } ],
        "SubnetId" : { "Ref" : "DMZSubnetAZ2" },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Join" : ["", [ { "Fn::FindInMap" : [ "MyAZs", { "Ref" : "AWS::Region" }, "AZ2" ] }, " NAT GWY" ] ] } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} }
        ],
        "UserData" : { "Fn::Base64" : { "Fn::FindInMap" : [ "VPNCIDR", { "Ref" : "AWS::Region" }, "Cidr" ] } }
      }
    },

    "NATIPAZ1" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc",
        "InstanceId" : { "Ref" : "NATInstanceAZ1" }
      }
    },

    "NATIPAZ2" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc",
        "InstanceId" : { "Ref" : "NATInstanceAZ2" }
      }
    },

    "VPNServerInstance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMIVPN", { "Ref" : "AWS::Region" }, { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "VPNInstanceType" }, "Arch" ] } ] },
        "InstanceType" : { "Ref" : "VPNInstanceType" },
        "DisableApiTermination" : "false",
	"SourceDestCheck" : "false",
        "KeyName" : { "Ref" : "KeyName" },
        "SecurityGroupIds" : [ { "Ref" : "RemoteAdminSecurityGroup" }, { "Ref" : "VPNSecurityGroup" } ],
        "SubnetId" : { "Ref" : "DMZSubnetAZ2" },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Join" : ["", [ { "Ref" : "AWS::Region" }, " SSL VPN GWY" ] ] } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } }
        ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : [ "",
				[
					"public_hostname=",{ "Fn::Join" : ["", [ { "Fn::FindInMap" : [ "AZCodes", { "Ref" : "AWS::Region" }, "AZCode" ] },"-ssl-vpn.",{ "Ref" : "HostedZone" } ] ] },
					"\n",
					"admin_pw=",{ "Ref" : "VPNUserPassword" },
					"\n",
					"reroute_gw=1",
					"\n",
					"reroute_dns=1",
					"\n"
				] ]
			} }
      }
    },

    "VPNIPAddress" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc",
	"InstanceId" : { "Ref" : "VPNServerInstance" }
      }
    },

  "DNSRecord" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "HostedZoneName" : { "Fn::Join" : ["", [{ "Ref" : "HostedZone" }, "."]] },
        "Name" : { "Fn::Join" : ["", [ { "Fn::FindInMap" : [ "AZCodes", { "Ref" : "AWS::Region" }, "AZCode" ] },"-ssl-vpn.",{ "Ref" : "HostedZone" } ] ] },
        "Type" : "A",
        "TTL" : "60",
        "ResourceRecords" : [ { "Fn::GetAtt" : [ "VPNServerInstance", "PublicIp" ] } ]
      }
    }
  },

  "Outputs" : {
	"VPNInstance" : {
	    "Description" : "VPN instance URL",
            "Value": { "Fn::Join" : [ "", [ "https://", { "Fn::FindInMap" : [ "AZCodes", { "Ref" : "AWS::Region" }, "AZCode" ] }, "-ssl-vpn.", { "Ref" : "HostedZone" }, "/" ] ] }
	},
	"VPCId" : {
	    "Description" : "VPC Id",
            "Value": { "Ref" : "VPC" }
        },
        "DMZSubnetIdAZ1" : {
            "Description" : "Subnet ID for DMZ Subnet AZ1",
            "Value": { "Ref" : "DMZSubnetAZ1" }
        },
        "DMZSubnetIdAZ2" : {
            "Description" : "Subnet ID for DMZ Subnet AZ2",
            "Value": { "Ref" : "DMZSubnetAZ2" }
        },
        "WebSubnetIdAZ1" : {
            "Description" : "Subnet ID for Web Subnet AZ1",
            "Value": { "Ref" : "WebSubnetAZ1" }
        },
        "WebSubnetIdAZ2" : {
            "Description" : "Subnet ID for Web Subnet AZ2",
            "Value": { "Ref" : "WebSubnetAZ2" }
        },
        "AppSubnetIdAZ1" : {
            "Description" : "Subnet ID for App Subnet AZ1",
            "Value": { "Ref" : "AppSubnetAZ1" }
        },
        "AppSubnetIdAZ2" : {
            "Description" : "Subnet ID for App Subnet AZ2",
            "Value": { "Ref" : "AppSubnetAZ2" }
        },
        "RDBSubnetIdAZ1" : {
            "Description" : "Subnet ID for RDB Subnet AZ1",
            "Value": { "Ref" : "RDBSubnetAZ1" }
        },
        "RDBSubnetIdAZ2" : {
            "Description" : "Subnet ID for RDB Subnet AZ2",
            "Value": { "Ref" : "RDBSubnetAZ2" }
        }
  } 
}
